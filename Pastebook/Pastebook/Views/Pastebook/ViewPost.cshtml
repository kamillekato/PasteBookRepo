@model PastebookDataLibrary.POST
@{
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}
<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <div id="divRenderAction">
            <div class="divShadow divPost clearfix rowProfilePadding">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-inline">
                            <span class="form-group">
                                @{
                                    if (Model.USER1.PROFILE_PIC == null)
                                    {
                                        <img src="~/Content/Images/defaultProfilePic.jpg" class="img-circle img-responsive img-post" />
                                    }
                                    else
                                    {
                                        var base64 = Convert.ToBase64String(Model.USER1.PROFILE_PIC);
                                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                        <img src="@imgSrc" class="img-circle img-responsive img-post" />
                                    }
                                }

                            </span>
                            <div class="form-group">
                                @{
                                    if (Model.USER1.USER_NAME == Model.USER.USER_NAME)
                                    {
                                        <span class="postTextColor" role="button" onclick="location.href='@Url.Action("ViewProfile","Pastebook", new {userName = Model.USER1.USER_NAME})'"><strong>@Model.USER1.FIRST_NAME @Model.USER1.LAST_NAME</strong></span><br />

                                    }
                                    else
                                    {
                                        <span class="postTextColor" role="button" onclick="location.href='@Url.Action("ViewProfile","Pastebook", new {userName = Model.USER1.USER_NAME})'"><strong>@Model.USER1.FIRST_NAME @Model.USER1.LAST_NAME</strong></span>
                                        <span class="postTextColor" role="button" onclick="location.href='@Url.Action("ViewProfile","Pastebook", new {userName = Model.USER.USER_NAME})'"> posted on <strong> @Model.USER.FIRST_NAME @Model.USER.LAST_NAME</strong>'s timeline</span><br />

                                    }
                                }
                                <span class="grayText">@Model.CREATED_DATE.ToString("MMMM dd, yyyy hh:ss tt")</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-offset-1 col-md-11">
                        <blockquote>
                            <p class="text-left postTextColor">@Model.CONTENT</p>
                        </blockquote>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        @if (!Model.LIKEs.Any(lke => lke.LIKE_BY == (int)Session["CurrentUserID"]))
                        {
                            <button title="Like" type="submit" class="asText postButton likeButton" onclick="LikePost(@Model.ID,@Model.POSTER_ID)"><span class="glyphicon glyphicon-thumbs-up"> </span>  @Model.LIKEs.Count()</button>
                        }
                        else
                        {
                            <button title="Like" type="submit" class="asText postButton postBlueButton likeButton" onclick="UnlikePost(@Model.ID)"><span class="glyphicon glyphicon-thumbs-up"> </span>  @Model.LIKEs.Count()</button>
                        }

                        @if (Model.COMMENTs.Any(cmmnt => cmmnt.POSTER_ID == (int)Session["CurrentUserID"]))
                        {
                            <button type="submit" class="asText postButton postBlueButton" ng-click="">
                                <span class="glyphicon glyphicon-comment">
                                </span>  @Model.COMMENTs.Count()
                            </button>
                        }
                        else
                        {
                            <button type="submit" class="asText postButton" ng-click="">
                                <span class="glyphicon glyphicon-comment">
                                </span>  @Model.COMMENTs.Count()
                            </button>
                        }
                        <div class="btn-group">
                            <button type="button" class="asText postButton" ng-click="" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="glyphicon glyphicon-option-horizontal"></span>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a role="button" onclick="ViewLikes('@Url.Action("ViewLikes","Pastebook", new { postID = Model.ID })')">View likes</a></li> 
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div id="commentTop">
                            <textarea id="@Model.ID" class="form-control commentAreaPost" rows="2" placeholder="Comment here"></textarea>
                            <span id="errorComment" class="text-danger"></span>
                            <div class="row">
                                <div class="col-md-12">
                                    <button onclick="SendComment(@Model.ID,@Model.PROFILE_OWNER_ID)" class="btn btn-primary commentPostButton pull-right">Comment</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @foreach (var comment in Model.COMMENTs.OrderByDescending(cmmnt => cmmnt.DATE_CREATED))
                {
                    <div class="row">
                        <div class="col-md-12">
                            <div class="commentDisplay">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-inline">
                                            @{
                                                if (comment.USER.PROFILE_PIC == null)
                                                {
                                                    <span class="form-group"><img src="~/Content/Images/defaultProfilePic.jpg" class="img-circle img-responsive img-comment" /></span>
                                                }
                                                else
                                                {
                                                    var commentBase64 = Convert.ToBase64String(comment.USER.PROFILE_PIC);
                                                    var imgCommentSrc = String.Format("data:image/gif;base64,{0}", commentBase64);
                                                    <span class="form-group"><img src="@imgCommentSrc" class="img-circle img-responsive img-comment" /></span>
                                                }
                                            }
                                            <div class="form-group">
                                                <span class="postTextColor commentText" role="button" onclick="location.href='@Url.Action("ViewProfile","Pastebook", new {userName = comment.USER.USER_NAME})'"><strong>@comment.USER.FIRST_NAME @comment.USER.LAST_NAME</strong></span><br />
                                                <span class="grayText commentText">@comment.DATE_CREATED.ToString("MMMM dd, yyyy hh:ss tt")</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-offset-1 col-md-11">
                                        <strong  class="text-left postTextColor commentContent"> @comment.CONTENT  </strong>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                                                }
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="modalView" tabindex="-1" role="dialog" aria-labelledby="modalViewLabel">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="modalViewLabel">Like</h4>
            </div>
            <div class="modal-body modalLikeBody">
                <div id="modalContentRender">

                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {

    <script>
        var posterID =  @Session["CurrentUserID"];
        var sendCommentUrl = '@Url.Action("PostComment","Pastebook")';
        var likeUnlikeUrl = '@Url.Action("LikeUnlikePost","Pastebook")'; 
        var likeUrl = '@Url.Action("LikePost","Pastebook")';
        var unlikeUrl = '@Url.Action("UnlikePost","Pastebook")'
    </script>
    <script src="~/Scripts/Custom/ViewPost.js"></script>
}