
@model Pastebook.Models.UserModel
@{
        ViewBag.ListOfGender = new SelectList(new List<SelectListItem> {
                            new SelectListItem { Value="U",Text= "Unspecified",Selected =true },
                            new SelectListItem { Value = "M",Text="Male"},
                               new SelectListItem {Value = "F", Text ="Female" }
                           }, "Value", "Text");
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}

@using (Html.BeginForm("SignUp", "Pastebook", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-offset-7 col-md-5">
            <div class="containerView divShadow">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group formSignup">
                        <div class="col-md-3">
                                <button type="button" onclick="location.href='@Url.Action("Login","Pastebook")'" class="btn-default btn btn-primary "><span class="glyphicon glyphicon-chevron-left"></span><strong>BACK</strong></button>                        
                        </div>
                        <div class="col-md-offset-1 col-md-4">
                            <h4 class="grayText"><strong>SIGN UP</strong></h4>
                        </div>
                    </div>
                    <div class="form-group formSignup">
                        <div class="col-md-4">
                            <strong class="redText">Required(<span class="glyphicon glyphicon-asterisk"></span>)</strong>
                        </div>
                    </div>
                    <div class="form-group formSignup">
                        <div class="col-md-6">
                            
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" }) <strong class="redText asteriskSize">*</strong>
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })<strong class="redText asteriskSize">*</strong>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group formSignup">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label" })<strong class="redText asteriskSize">*</strong>
                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group formSignup">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })<strong class="redText asteriskSize">*</strong>
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6  ">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })<strong class="redText asteriskSize">*</strong>
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group formSignup">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label" })<strong class="redText asteriskSize">*</strong>
                            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.CountryID, new SelectList(ViewBag.ListOfCountry, "ID", "Country"), "--Select Country--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group formSignup">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Gender, (SelectList)ViewBag.ListOfGender, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group formSignup">
                        <div class="col-md-12"> 
                            <button type="submit" class="btn btnMain btn-default btn-block btn-primary wide"><strong>SIGN UP</strong></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
            
    </div>
    
}
 

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $("#Birthday").datepicker({maxDate:"0"});
        });
    </script>
}
