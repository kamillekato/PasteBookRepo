@model IEnumerable<PastebookDataLibrary.POST>

@foreach(var post in Model.OrderByDescending(mdl=>mdl.CREATED_DATE))
{
    <div class="divShadow divPost clearfix rowProfilePadding"> 
        <div class="row">
            <div class="col-md-12"><div class="form-inline">
                <span class="form-group">
                    @{
                        if (post.USER1.PROFILE_PIC == null)
                        {
                            <img src="~/Content/Images/defaultProfilePic.jpg" class="img-circle img-responsive img-post" />
                        }
                        else
                        {
                            var base64 = Convert.ToBase64String(post.USER1.PROFILE_PIC);
                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                            <img src="@imgSrc" class="img-circle img-responsive img-post" />
                        }
                    }
                
                </span>
                <div class="form-group">  
                    @{
                        if (post.USER1.USER_NAME == post.USER.USER_NAME)
                        { 
                                <span class="postPosterName postTextColor" role="button" onclick="location.href='@Url.Action("ViewProfile","Pastebook", new {userName = post.USER1.USER_NAME})'"><strong>@post.USER1.FIRST_NAME @post.USER1.LAST_NAME</strong></span><br />
                        }
                        else
                        {
                            <span class="postPosterName">
                                <span class="postTextColor" role="button" onclick="location.href='@Url.Action("ViewProfile","Pastebook", new {userName = post.USER1.USER_NAME})'"><strong>@post.USER1.FIRST_NAME @post.USER1.LAST_NAME</strong></span>
                                <span class="postTextColor" role="button" onclick="location.href='@Url.Action("ViewProfile","Pastebook", new {userName = post.USER.USER_NAME})'"> posted on <strong>    @post.USER.FIRST_NAME @post.USER.LAST_NAME</strong>'s timeline</span><br />
                            </span>
                        }
                    }
                    <span class="grayText">@post.CREATED_DATE.ToString("MMMM dd, yyyy hh:mm tt")</span> 
                </div>
            </div>
            </div> 
        </div>  
            <div class="row">
                <div class="col-md-offset-1 col-md-11">
                    <blockquote >
                        <p class="text-left postTextColor">@post.CONTENT</p>
                    </blockquote>
                </div>
            </div>
        <div class="row">
             <div class="col-md-12">
                 @if (!post.LIKEs.Any(lke=>lke.LIKE_BY == (int)Session["CurrentUserID"]))
                 {
                    <button title="Like" type="submit" class="asText postButton likeButton" onclick="LikePost(@post.ID,@post.POSTER_ID)"><span class="glyphicon glyphicon-thumbs-up"> </span>  @post.LIKEs.Count()</button>
                 }
                 else 
                 {
                    <button title="Unlike" type="submit" class="asText postButton postBlueButton likeButton" onclick="UnlikePost(@post.ID)" ><span class="glyphicon glyphicon-thumbs-up"> </span>  @post.LIKEs.Count()</button>
                 }

                 @if (post.COMMENTs.Any(cmmnt => cmmnt.POSTER_ID == (int)Session["CurrentUserID"]))
                 {
                    <button title="Number of comments" type="submit" class="asText postButton postBlueButton"  >
                        <span class="glyphicon glyphicon-comment">
                        </span>  @post.COMMENTs.Count()
                    </button>
                 }
                 else
                 {
                    <button title="Number of comments" type="submit" class="asText postButton"  >
                        <span class="glyphicon glyphicon-comment">
                        </span>  @post.COMMENTs.Count()
                    </button>
                 }  
                 <div class="btn-group">
                     <button title="More" type="button" class="asText postButton" ng-click="" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                         <span class="glyphicon glyphicon-option-horizontal"></span>
                     </button>
                     <ul class="dropdown-menu">
                         <li><a role="button" onclick="ViewLikes('@Url.Action("ViewLikes","Pastebook", new { postID = post.ID })')"  >View likes</a></li>  
                         <li><a role="button" onclick="location.href='@Url.Action("ViewPost","Pastebook",new {postID = post.ID })'">View post</a></li>
                     </ul>
                 </div>
             </div>  
        </div>
        <div class="row">
            <div class="col-md-12">
                <div id="commentTop">
                    <textarea id="@post.ID"class="form-control commentAreaPost" rows="2"   placeholder="Comment here" onfocus="ClearTimer()" onblur="TimerNewsFeed()" ></textarea>
                    <span id="@string.Format("{0}Error",post.ID)" class="text-danger"></span>
                    <div class="row">
                        <div class="col-md-12">
                            <button onclick="SendComment(@post.ID,@post.POSTER_ID)" class="btn btn-primary commentPostButton pull-right" >Comment</button> 
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @foreach(var comment in post.COMMENTs.OrderByDescending(cmmnt=>cmmnt.DATE_CREATED)){
            <div class="row">
                <div class="col-md-12">
                    <div class="commentDisplay">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-inline">
                                    @{
                                        if (comment.USER.PROFILE_PIC == null)
                                        {
                                            <span class="form-group"><img src="~/Content/Images/defaultProfilePic.jpg" class="img-circle img-responsive img-comment" /></span>
                                        }
                                        else
                                        {
                                            var commentBase64 = Convert.ToBase64String(comment.USER.PROFILE_PIC);
                                            var imgCommentSrc = String.Format("data:image/gif;base64,{0}", commentBase64);
                                            <span class="form-group"><img src="@imgCommentSrc" class="img-circle img-responsive img-comment" /></span>
                                        }
                                    }
                                    <div class="form-group">
                                        <span class="postTextColor commentText" role="button" onclick="location.href='@Url.Action("ViewProfile","Pastebook", new {userName = comment.USER.USER_NAME})'"><strong>@comment.USER.FIRST_NAME @comment.USER.LAST_NAME</strong></span><br />
                                        <span class="grayText commentText">@comment.DATE_CREATED.ToString("MMMM dd, yyyy hh:mm tt")</span>
                                    </div>
                                </div>
                            </div>
                        </div>  
                        <div class="row">
                            <div class="col-md-offset-1 col-md-11"> 
                                 <strong class="text-left postTextColor commentContent"> @comment.CONTENT  </strong>   
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
  